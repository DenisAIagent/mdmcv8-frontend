<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard SmartLinks - MDMC</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .dashboard-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .header h1 {
            color: white;
            font-size: 2rem;
            margin-bottom: 20px;
        }

        .nav-tabs {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .nav-tab {
            background: rgba(255, 255, 255, 0.1);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .nav-tab:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: translateY(-2px);
        }

        .nav-tab.active {
            background: linear-gradient(45deg, #ff6b6b, #ee5a24);
            box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);
        }

        .content-section {
            display: none;
        }

        .content-section.active {
            display: block;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            text-align: center;
        }

        .stat-card i {
            font-size: 2.5rem;
            color: #ff6b6b;
            margin-bottom: 15px;
        }

        .stat-card h3 {
            color: white;
            font-size: 2rem;
            margin-bottom: 10px;
        }

        .stat-card p {
            color: rgba(255, 255, 255, 0.8);
            font-size: 1.1rem;
        }

        .controls {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .controls-row {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
            align-items: center;
        }

        .search-box {
            flex: 1;
            min-width: 250px;
            position: relative;
        }

        .search-box input {
            width: 100%;
            padding: 12px 40px 12px 15px;
            border: none;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.9);
            font-size: 16px;
        }

        .search-box i {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #666;
        }

        .filter-select {
            padding: 12px 15px;
            border: none;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.9);
            font-size: 16px;
            cursor: pointer;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .btn-primary {
            background: linear-gradient(45deg, #ff6b6b, #ee5a24);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);
        }

        .btn-secondary {
            background: rgba(255, 255, 255, 0.2);
            color: white;
        }

        .btn-secondary:hover {
            background: rgba(255, 255, 255, 0.3);
        }

        .smartlinks-list {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            overflow: hidden;
        }

        .list-header {
            background: rgba(255, 255, 255, 0.1);
            padding: 15px 20px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        }

        .list-header h3 {
            color: white;
            font-size: 1.3rem;
        }

        .smartlink-item {
            padding: 20px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            transition: background 0.3s ease;
        }

        .smartlink-item:hover {
            background: rgba(255, 255, 255, 0.05);
        }

        .smartlink-item:last-child {
            border-bottom: none;
        }

        .smartlink-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 15px;
            flex-wrap: wrap;
            gap: 10px;
        }

        .smartlink-info h4 {
            color: white;
            font-size: 1.2rem;
            margin-bottom: 5px;
        }

        .smartlink-info p {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.9rem;
        }

        .smartlink-actions {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .btn-small {
            padding: 8px 16px;
            font-size: 0.9rem;
        }

        .btn-danger {
            background: linear-gradient(45deg, #e74c3c, #c0392b);
            color: white;
        }

        .btn-info {
            background: linear-gradient(45deg, #3498db, #2980b9);
            color: white;
        }

        .btn-warning {
            background: linear-gradient(45deg, #f39c12, #e67e22);
            color: white;
        }

        .smartlink-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 15px;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid rgba(255, 255, 255, 0.2);
        }

        .stat-item {
            text-align: center;
        }

        .stat-item .value {
            color: #ff6b6b;
            font-size: 1.5rem;
            font-weight: bold;
            display: block;
        }

        .stat-item .label {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.8rem;
        }

        .platforms-list {
            display: flex;
            gap: 8px;
            margin-top: 10px;
            flex-wrap: wrap;
        }

        .platform-badge {
            padding: 4px 8px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 15px;
            color: white;
            font-size: 0.8rem;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            z-index: 1000;
        }

        .modal.show {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 30px;
            max-width: 600px;
            width: 90%;
            border: 1px solid rgba(255, 255, 255, 0.2);
            position: relative;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .modal-header h3 {
            color: white;
            font-size: 1.5rem;
        }

        .close-btn {
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
            padding: 5px;
        }

        .create-form {
            display: grid;
            gap: 20px;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        .form-group label {
            color: white;
            font-weight: 500;
        }

        .form-group input,
        .form-group textarea {
            padding: 12px;
            border: none;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.9);
            font-size: 16px;
        }

        .form-group textarea {
            resize: vertical;
            min-height: 100px;
        }

        .search-results {
            max-height: 200px;
            overflow-y: auto;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            margin-top: 10px;
        }

        .search-result-item {
            padding: 10px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .search-result-item:hover {
            background: rgba(255, 255, 255, 0.1);
        }

        .search-result-item:last-child {
            border-bottom: none;
        }

        .track-info {
            color: white;
        }

        .track-info .title {
            font-weight: 500;
            margin-bottom: 5px;
        }

        .track-info .artist {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.9rem;
        }

        @media (max-width: 768px) {
            .dashboard-container {
                padding: 10px;
            }

            .header h1 {
                font-size: 1.5rem;
            }

            .controls-row {
                flex-direction: column;
                align-items: stretch;
            }

            .search-box {
                min-width: auto;
            }

            .smartlink-header {
                flex-direction: column;
                align-items: stretch;
            }

            .smartlink-actions {
                justify-content: flex-start;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <header class="header">
            <h1><i class="fas fa-link"></i> Dashboard SmartLinks MDMC</h1>
            <nav class="nav-tabs">
                <button class="nav-tab active" data-tab="create">
                    <i class="fas fa-plus"></i> Créer un SmartLink
                </button>
                <button class="nav-tab" data-tab="manage">
                    <i class="fas fa-list"></i> Gérer les SmartLinks
                </button>
                <button class="nav-tab" data-tab="analytics">
                    <i class="fas fa-chart-bar"></i> Analytics
                </button>
            </nav>
        </header>

        <!-- Section Créer un SmartLink -->
        <section id="create" class="content-section active">
            <div class="controls">
                <h2 style="color: white; margin-bottom: 20px;">Créer un nouveau SmartLink</h2>
                <form id="createForm" class="create-form">
                    <div class="form-group">
                        <label for="searchQuery">Rechercher un titre</label>
                        <div class="search-box">
                            <input type="text" id="searchQuery" placeholder="Nom de l'artiste + titre..." autocomplete="off">
                            <i class="fas fa-search"></i>
                        </div>
                        <div id="searchResults" class="search-results" style="display: none;"></div>
                    </div>
                    
                    <div class="form-group">
                        <label for="trackTitle">Titre sélectionné</label>
                        <input type="text" id="trackTitle" readonly placeholder="Sélectionnez un titre ci-dessus">
                    </div>
                    
                    <div class="form-group">
                        <label for="customSlug">URL personnalisée (optionnel)</label>
                        <input type="text" id="customSlug" placeholder="mon-titre-personnalise">
                    </div>
                    
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-magic"></i> Créer le SmartLink
                    </button>
                </form>
            </div>
        </section>

        <!-- Section Gérer les SmartLinks -->
        <section id="manage" class="content-section">
            <div class="stats-grid">
                <div class="stat-card">
                    <i class="fas fa-link"></i>
                    <h3><%= totalSmartlinks || 0 %></h3>
                    <p>SmartLinks créés</p>
                </div>
                <div class="stat-card">
                    <i class="fas fa-eye"></i>
                    <h3><%= totalViews || 0 %></h3>
                    <p>Vues totales</p>
                </div>
                <div class="stat-card">
                    <i class="fas fa-mouse-pointer"></i>
                    <h3><%= totalClicks || 0 %></h3>
                    <p>Clics totaux</p>
                </div>
                <div class="stat-card">
                    <i class="fas fa-percentage"></i>
                    <h3><%= clickRate || '0%' %></h3>
                    <p>Taux de clic</p>
                </div>
            </div>

            <div class="controls">
                <div class="controls-row">
                    <div class="search-box">
                        <input type="text" id="filterSearch" placeholder="Rechercher un SmartLink...">
                        <i class="fas fa-search"></i>
                    </div>
                    <select class="filter-select" id="sortFilter">
                        <option value="date">Trier par date</option>
                        <option value="views">Trier par vues</option>
                        <option value="clicks">Trier par clics</option>
                        <option value="title">Trier par titre</option>
                    </select>
                    <button class="btn btn-secondary" onclick="refreshSmartlinks()">
                        <i class="fas fa-sync"></i> Actualiser
                    </button>
                </div>
            </div>

            <div class="smartlinks-list">
                <div class="list-header">
                    <h3>Mes SmartLinks</h3>
                </div>
                <div id="smartlinksList">
                    <% if (smartlinks && smartlinks.length > 0) { %>
                        <% smartlinks.forEach(function(smartlink) { %>
                            <div class="smartlink-item" data-id="<%= smartlink.id || smartlink._id %>">
                                <div class="smartlink-header">
                                    <div class="smartlink-info">
                                        <h4><%= smartlink.title || 'Titre non disponible' %></h4>
                                        <p><%= smartlink.artist || 'Artiste non disponible' %></p>
                                        <p>Créé le <%= smartlink.created_at ? new Date(smartlink.created_at).toLocaleDateString('fr-FR') : 'Date inconnue' %></p>
                                        <div class="platforms-list">
                                            <% if (smartlink.platforms && smartlink.platforms.length > 0) { %>
                                                <% smartlink.platforms.forEach(function(platform) { %>
                                                    <span class="platform-badge"><%= platform %></span>
                                                <% }); %>
                                            <% } else { %>
                                                <span class="platform-badge">Aucune plateforme</span>
                                            <% } %>
                                        </div>
                                    </div>
                                    <div class="smartlink-actions">
                                        <button class="btn btn-info btn-small" onclick="viewStats('<%= smartlink.id || smartlink._id %>')">
                                            <i class="fas fa-chart-line"></i> Stats
                                        </button>
                                        <a href="/smartlink/<%= smartlink.slug || smartlink.id || smartlink._id %>" target="_blank" class="btn btn-secondary btn-small">
                                            <i class="fas fa-external-link-alt"></i> Voir
                                        </a>
                                        <button class="btn btn-warning btn-small" onclick="editSmartlink('<%= smartlink.id || smartlink._id %>')">
                                            <i class="fas fa-edit"></i> Modifier
                                        </button>
                                        <button class="btn btn-danger btn-small" onclick="deleteSmartlink('<%= smartlink.id || smartlink._id %>')">
                                            <i class="fas fa-trash"></i> Supprimer
                                        </button>
                                    </div>
                                </div>
                                <div class="smartlink-stats">
                                    <div class="stat-item">
                                        <span class="value"><%= smartlink.views || 0 %></span>
                                        <span class="label">Vues</span>
                                    </div>
                                    <div class="stat-item">
                                        <span class="value"><%= smartlink.clicks || 0 %></span>
                                        <span class="label">Clics</span>
                                    </div>
                                    <div class="stat-item">
                                        <span class="value"><%= smartlink.clicks && smartlink.views ? Math.round((smartlink.clicks / smartlink.views) * 100) : 0 %>%</span>
                                        <span class="label">Taux</span>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="smartlink-item">
                            <div style="text-align: center; color: rgba(255, 255, 255, 0.7); padding: 40px;">
                                <i class="fas fa-link" style="font-size: 3rem; margin-bottom: 20px; opacity: 0.5;"></i>
                                <h3>Aucun SmartLink créé</h3>
                                <p>Commencez par créer votre premier SmartLink</p>
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
        </section>

        <!-- Section Analytics -->
        <section id="analytics" class="content-section">
            <div class="stats-grid">
                <div class="stat-card">
                    <i class="fas fa-calendar-day"></i>
                    <h3><%= todayViews || 0 %></h3>
                    <p>Vues aujourd'hui</p>
                </div>
                <div class="stat-card">
                    <i class="fas fa-calendar-week"></i>
                    <h3><%= weekViews || 0 %></h3>
                    <p>Vues cette semaine</p>
                </div>
                <div class="stat-card">
                    <i class="fas fa-calendar-alt"></i>
                    <h3><%= monthViews || 0 %></h3>
                    <p>Vues ce mois</p>
                </div>
                <div class="stat-card">
                    <i class="fas fa-trophy"></i>
                    <h3><%= topSmartlink || 'Aucun' %></h3>
                    <p>SmartLink le plus populaire</p>
                </div>
            </div>

            <div class="controls">
                <h2 style="color: white; margin-bottom: 20px;">Analytics détaillées</h2>
                <p style="color: rgba(255, 255, 255, 0.8);">Fonctionnalité en cours de développement...</p>
            </div>
        </section>
    </div>

    <!-- Modal pour les statistiques détaillées -->
    <div id="statsModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Statistiques détaillées</h3>
                <button class="close-btn" onclick="closeModal('statsModal')">&times;</button>
            </div>
            <div id="statsContent">
                <!-- Le contenu sera chargé dynamiquement -->
            </div>
        </div>
    </div>

    <script>
        let selectedTrack = null;
        let searchTimeout = null;

        // Navigation entre les onglets
        document.querySelectorAll('.nav-tab').forEach(tab => {
            tab.addEventListener('click', function() {
                const targetTab = this.dataset.tab;
                
                // Mettre à jour les onglets actifs
                document.querySelectorAll('.nav-tab').forEach(t => t.classList.remove('active'));
                this.classList.add('active');
                
                // Mettre à jour les sections actives
                document.querySelectorAll('.content-section').forEach(section => {
                    section.classList.remove('active');
                });
                document.getElementById(targetTab).classList.add('active');
            });
        });

        // Recherche de titres
        document.getElementById('searchQuery').addEventListener('input', function() {
            const query = this.value.trim();
            const resultsDiv = document.getElementById('searchResults');
            
            if (query.length < 2) {
                resultsDiv.style.display = 'none';
                return;
            }

            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                searchTracks(query);
            }, 300);
        });

        async function searchTracks(query) {
            const resultsDiv = document.getElementById('searchResults');
            resultsDiv.innerHTML = '<div style="padding: 10px; color: white;">Recherche en cours...</div>';
            resultsDiv.style.display = 'block';

            try {
                const response = await fetch('/api/search', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ query: query })
                });

                const data = await response.json();
                
                if (data.success && data.results && data.results.length > 0) {
                    displaySearchResults(data.results);
                } else {
                    resultsDiv.innerHTML = '<div style="padding: 10px; color: rgba(255,255,255,0.7);">Aucun résultat trouvé</div>';
                }
            } catch (error) {
                console.error('Erreur de recherche:', error);
                resultsDiv.innerHTML = '<div style="padding: 10px; color: #ff6b6b;">Erreur de recherche</div>';
            }
        }

        function displaySearchResults(results) {
            const resultsDiv = document.getElementById('searchResults');
            const html = results.map(track => `
                <div class="search-result-item" onclick="selectTrack('${track.id}', '${escapeHtml(track.name)}', '${escapeHtml(track.artists[0]?.name || '')}', '${track.album?.images[0]?.url || ''}')">
                    <div class="track-info">
                        <div class="title">${escapeHtml(track.name)}</div>
                        <div class="artist">${escapeHtml(track.artists[0]?.name || '')}</div>
                    </div>
                </div>
            `).join('');
            
            resultsDiv.innerHTML = html;
        }

        function selectTrack(id, title, artist, image) {
            selectedTrack = { id, title, artist, image };
            document.getElementById('trackTitle').value = `${artist} - ${title}`;
            document.getElementById('searchResults').style.display = 'none';
            document.getElementById('searchQuery').value = `${artist} - ${title}`;
        }

        function escapeHtml(text) {
            const div = document.createElement('div');
            div.textContent = text;
            return div.innerHTML;
        }

        // Soumission du formulaire de création
        document.getElementById('createForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            if (!selectedTrack) {
                alert('Veuillez sélectionner un titre');
                return;
            }

            const customSlug = document.getElementById('customSlug').value.trim();
            const submitBtn = this.querySelector('button[type="submit"]');
            
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Création en cours...';
            submitBtn.disabled = true;

            try {
                const response = await fetch('/api/smartlink/create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        trackId: selectedTrack.id,
                        title: selectedTrack.title,
                        artist: selectedTrack.artist,
                        image: selectedTrack.image,
                        customSlug: customSlug
                    })
                });

                const data = await response.json();
                
                if (data.success) {
                    alert('SmartLink créé avec succès !');
                    window.open(data.smartlinkUrl, '_blank');
                    
                    // Réinitialiser le formulaire
                    this.reset();
                    selectedTrack = null;
                    document.getElementById('trackTitle').value = '';
                    
                    // Actualiser la liste des SmartLinks
                    if (document.getElementById('manage').classList.contains('active')) {
                        refreshSmartlinks();
                    }
                } else {
                    alert('Erreur lors de la création: ' + (data.message || 'Erreur inconnue'));
                }
            } catch (error) {
                console.error('Erreur:', error);
                alert('Erreur de connexion');
            } finally {
                submitBtn.innerHTML = '<i class="fas fa-magic"></i> Créer le SmartLink';
                submitBtn.disabled = false;
            }
        });

        // Fonctions pour la gestion des SmartLinks
        async function viewStats(smartlinkId) {
            try {
                const response = await fetch(`/api/smartlink/${smartlinkId}/stats`);
                const data = await response.json();
                
                if (data.success) {
                    const modal = document.getElementById('statsModal');
                    const content = document.getElementById('statsContent');
                    
                    content.innerHTML = `
                        <div class="stats-grid">
                            <div class="stat-card">
                                <i class="fas fa-eye"></i>
                                <h3>${data.stats.views || 0}</h3>
                                <p>Vues totales</p>
                            </div>
                            <div class="stat-card">
                                <i class="fas fa-mouse-pointer"></i>
                                <h3>${data.stats.clicks || 0}</h3>
                                <p>Clics totaux</p>
                            </div>
                            <div class="stat-card">
                                <i class="fas fa-percentage"></i>
                                <h3>${data.stats.clicks && data.stats.views ? Math.round((data.stats.clicks / data.stats.views) * 100) : 0}%</h3>
                                <p>Taux de clic</p>
                            </div>
                        </div>
                        <div style="margin-top: 20px; color: rgba(255,255,255,0.8);">
                            <h4 style="color: white; margin-bottom: 10px;">Informations détaillées</h4>
                            <p><strong>Titre:</strong> ${data.stats.title || 'N/A'}</p>
                            <p><strong>Artiste:</strong> ${data.stats.artist || 'N/A'}</p>
                            <p><strong>Créé le:</strong> ${data.stats.created_at ? new Date(data.stats.created_at).toLocaleDateString('fr-FR') : 'N/A'}</p>
                        </div>
                    `;
                    
                    modal.classList.add('show');
                } else {
                    alert('Erreur lors du chargement des statistiques');
                }
            } catch (error) {
                console.error('Erreur:', error);
                alert('Erreur de connexion');
            }
        }

        function editSmartlink(smartlinkId) {
            alert('Fonctionnalité de modification en cours de développement');
        }

        async function deleteSmartlink(smartlinkId) {
            if (confirm('Êtes-vous sûr de vouloir supprimer ce SmartLink ?')) {
                try {
                    const response = await fetch(`/api/smartlink/${smartlinkId}`, {
                        method: 'DELETE'
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        alert('SmartLink supprimé avec succès');
                        refreshSmartlinks();
                    } else {
                        alert('Erreur lors de la suppression: ' + (data.message || 'Erreur inconnue'));
                    }
                } catch (error) {
                    console.error('Erreur:', error);
                    alert('Erreur de connexion');
                }
            }
        }

        async function refreshSmartlinks() {
            try {
                const response = await fetch('/api/smartlinks');
                const data = await response.json();
                
                if (data.success) {
                    location.reload(); // Recharger la page pour mettre à jour les données
                }
            } catch (error) {
                console.error('Erreur:', error);
            }
        }

        function closeModal(modalId) {
            document.getElementById(modalId).classList.remove('show');
        }

        // Fermer les modals en cliquant à l'extérieur
        document.querySelectorAll('.modal').forEach(modal => {
            modal.addEventListener('click', function(e) {
                if (e.target === this) {
                    this.classList.remove('show');
                }
            });
        });

        // Filtres et recherche
        document.getElementById('filterSearch').addEventListener('input', function() {
            const query = this.value.toLowerCase();
            const items = document.querySelectorAll('.smartlink-item');
            
            items.forEach(item => {
                const title = item.querySelector('h4').textContent.toLowerCase();
                const artist = item.querySelector('p').textContent.toLowerCase();
                
                if (title.includes(query) || artist.includes(query)) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            });
        });

        document.getElementById('sortFilter').addEventListener('change', function() {
            const sortBy = this.value;
            const container = document.getElementById('smartlinksList');
            const items = Array.from(container.querySelectorAll('.smartlink-item'));
            
            items.sort((a, b) => {
                switch (sortBy) {
                    case 'views':
                        return parseInt(b.querySelector('.stat-item .value').textContent) - 
                               parseInt(a.querySelector('.stat-item .value').textContent);
                    case 'clicks':
                        return parseInt(b.querySelectorAll('.stat-item .value')[1].textContent) - 
                               parseInt(a.querySelectorAll('.stat-item .value')[1].textContent);
                    case 'title':
                        return a.querySelector('h4').textContent.localeCompare(b.querySelector('h4').textContent);
                    case 'date':
                    default:
                        return new Date(b.dataset.created || 0) - new Date(a.dataset.created || 0);
                }
            });
            
            items.forEach(item => container.appendChild(item));
        });
    </script>
</body>
</html>